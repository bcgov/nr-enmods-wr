{{- if and .Values.global.secrets .Values.global.secrets.enabled}}
{{- $databaseUser := .Values.global.secrets.databaseUser | default "postgres" }}
{{- $databasePassword := .Values.global.secrets.databasePassword | default (randAlphaNum 10) }}
{{- $databaseName := .Values.global.secrets.databaseName | default "postgres" }}
{{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "nr-enmods-wr") | default dict }}
{{- $secretData := (get $secretObj "data") | default dict }}
  # set below to existing secret data or generate a random one when not exists
{{- $host := printf "%s-%s:5432" .Release.Name .Values.global.databaseAlias }}
{{- $hostWithoutPort := printf "%s-%s" .Release.Name .Values.global.databaseAlias }}
{{- $databaseURL := printf "postgresql://%s:%s@%s/%s?connection_limit=100&pool_limit=50" $databaseUser (b64dec $databasePassword) $host $databaseName }}
{{- $databaseJDBCURL := printf "jdbc:postgresql://%s:%s@%s/%s" $databaseUser (b64dec $databasePassword) $host $databaseName }}
{{- $databaseJDBCURLNoCreds := printf "jdbc:postgresql://%s/%s" $host $databaseName }}
{{- $databasePort := (get $secretData "databasePort") | default "5432" }}

#-- backend
{{- $baseUrlBcApi := (get $secretData "baseUrlBcApi" | b64dec | default "") }}
{{- $observationsExportUrl := (get $secretData "observationsExportUrl" | b64dec | default "") }}
{{- $observationsUrl := (get $secretData "observationsUrl" | b64dec | default "") }}
{{- $locationTypeCodeTableApi := (get $secretData "locationTypeCodeTableApi" | b64dec | default "") }}
{{- $locationNameCodeTableApi := (get $secretData "locationNameCodeTableApi" | b64dec | default "") }}
{{- $permitNumberCodeTableApi := (get $secretData "permitNumberCodeTableApi" | b64dec | default "") }}
{{- $mediaCodeTableApi := (get $secretData "mediaCodeTableApi" | b64dec | default "") }}
{{- $observedPropertiesCodeTableApi := (get $secretData "observedPropertiesCodeTableApi" | b64dec | default "") }}
{{- $projectsCodeTableApi := (get $secretData "projectsCodeTableApi" | b64dec | default "") }}
{{- $apiKey := (get $secretData "apiKey" | b64dec | default "") }}
{{- $authToken := (get $secretData "authToken" | b64dec | default "") }}
{{- $samplingLocationsEndpoint := (get $secretData "samplingLocationsEndpoint" | b64dec | default "") }}
{{- $samplingLocationGroupsEndpoint := (get $secretData "samplingLocationGroupsEndpoint" | b64dec | default "") }}
{{- $extendedAttributesEndpoint := (get $secretData "extendedAttributesEndpoint" | b64dec | default "") }}
{{- $objectstoreUrl := (get $secretData "objectstoreUrl" | b64dec | default "") }}
{{- $objectstoreAccessKey := (get $secretData "objectstoreAccessKey" | b64dec | default "") }}
{{- $objectstoreSecretKey := (get $secretData "objectstoreSecretKey" | b64dec | default "") }}
{{- $objectstoreBucket := (get $secretData "objectstoreBucket" | b64dec | default "") }}
{{- $objectstoreFolder := (get $secretData "objectstoreFolder" | b64dec | default "") }}

#-- frontend
# {{- $apiName := (get $secretData "apiName" | b64dec | default "") }}
# {{- $baseUrl := (get $secretData "baseUrl" | b64dec | default "") }}
{{- $reactAppApiUrl := .Values.global.secrets.reactAppApiUrl | default "/api" }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-backend
  labels: {{- include "labels" . | nindent 4 }}
  {{- if .Values.global.secrets.persist }}
  annotations:
    helm.sh/resource-policy: keep
  {{- end }}
data:
  BASE_URL_BC_API:  {{ $baseUrlBcApi | b64enc | quote }}
  OBSERVATIONS_EXPORT_URL:  {{ $observationsExportUrl | b64enc | quote }}
  OBSERVATIONS_URL:  {{ $observationsUrl | b64enc | quote }}
  LOCATION_TYPE_CODE_TABLE_API:  {{ $locationTypeCodeTableApi | b64enc | quote }}
  LOCATION_NAME_CODE_TABLE_API:  {{ $locationNameCodeTableApi | b64enc | quote }}
  PERMIT_NUMBER_CODE_TABLE_API:  {{ $permitNumberCodeTableApi | b64enc | quote }}
  MEDIA_CODE_TABLE_API:  {{ $mediaCodeTableApi | b64enc | quote }}
  OBSERVED_PROPERTIES_CODE_TABLE_API:  {{ $observedPropertiesCodeTableApi | b64enc | quote }}
  PROJECTS_CODE_TABLE_API:  {{ $projectsCodeTableApi | b64enc | quote }}
  API_KEY:  {{ $apiKey | b64enc | quote }}
  AUTH_TOKEN:  {{ $authToken | b64enc | quote }}
  SAMPLING_LOCATIONS_ENDPOINT: {{ $samplingLocationsEndpoint | b64enc | quote }}
  SAMPLING_LOCATION_GROUPS_ENDPOINT: {{ $samplingLocationGroupsEndpoint | b64enc | quote }}
  EXTENDED_ATTRIBUTES_ENDPOINT: {{ $extendedAttributesEndpoint | b64enc | quote }}
  OBJECTSTORE_URL: {{ $objectstoreUrl | b64enc | quote }}
  OBJECTSTORE_ACCESS_KEY: {{ $objectstoreAccessKey | b64enc | quote }}
  OBJECTSTORE_SECRET_KEY: {{ $objectstoreSecretKey | b64enc | quote }}
  OBJECTSTORE_BUCKET: {{ $objectstoreBucket | b64enc | quote }}
  OBJECTSTORE_FOLDER: {{ $objectstoreFolder | b64enc | quote }}
  POSTGRES_PASSWORD: {{ $databasePassword | b64enc | quote }}
  POSTGRES_USER: {{ $databaseUser | b64enc | quote }}
  POSTGRES_DATABASE: {{ $databaseName | b64enc | quote }}
  POSTGRES_HOST: {{ $host | b64enc | quote }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-frontend
  labels: {{- include "labels" . | nindent 4 }}
  {{- if .Values.global.secrets.persist }}
  annotations:
    helm.sh/resource-policy: keep
  {{- end }}
data:
  # FRONTEND Secrets
  PORT: "3000"

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-flyway
  labels: {{- include "labels" . | nindent 4 }}
  {{- if .Values.global.secrets.persist }}
  annotations:
    helm.sh/resource-policy: keep
  {{- end }}
data:
  # FLYWAY Secrets
  FLYWAY_URL: {{ $databaseJDBCURLNoCreds | b64enc | quote }}
  FLYWAY_USER: {{ $databaseUser | b64enc | quote }}
  FLYWAY_PASSWORD: {{ $databasePassword | b64enc | quote }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-database
  labels: {{- include "labels" . | nindent 4 }}
  {{- if .Values.global.secrets.persist }}
  annotations:
    helm.sh/resource-policy: keep
  {{- end }}
data:
  postgres-password: {{ $databasePassword | b64enc | quote }}
  password: {{ $databasePassword | b64enc | quote }}
  POSTGRES_PASSWORD: {{ $databasePassword | b64enc | quote }}
  POSTGRES_USER: {{ $databaseUser | b64enc | quote }}
  POSTGRES_DATABASE: {{ $databaseName | b64enc | quote }}
  POSTGRES_HOST: {{ $host | b64enc | quote }}

{{- end }}
