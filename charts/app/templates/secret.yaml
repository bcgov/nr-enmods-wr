{{- if and .Values.global.secrets .Values.global.secrets.enabled}}
{{- $secretObj := (lookup "v1" "Secret" .Release.Namespace "nr-enmods-wr") | default dict }}
{{- $secretData := (get $secretObj "data") | default dict }}
  # set below to existing secret data or generate a random one when not exists

#-- backend
{{- $baseUrlBcApi := (get $secretData "baseUrlBcApi" | b64dec | default "") }}
{{- $observationsExportUrl := (get $secretData "observationsExportUrl" | b64dec | default "") }}
{{- $observationsUrl := (get $secretData "observationsUrl" | b64dec | default "") }}
{{- $locationTypeCodeTableApi := (get $secretData "locationTypeCodeTableApi" | b64dec | default "") }}
{{- $locationNameCodeTableApi := (get $secretData "locationNameCodeTableApi" | b64dec | default "") }}
{{- $permitNumberCodeTableApi := (get $secretData "permitNumberCodeTableApi" | b64dec | default "") }}
{{- $mediaCodeTableApi := (get $secretData "mediaCodeTableApi" | b64dec | default "") }}
{{- $observedPropertiesCodeTableApi := (get $secretData "observedPropertiesCodeTableApi" | b64dec | default "") }}
{{- $projectsCodeTableApi := (get $secretData "projectsCodeTableApi" | b64dec | default "") }}
{{- $apiKey := (get $secretData "apiKey" | b64dec | default "") }}
{{- $authToken := (get $secretData "authToken" | b64dec | default "") }}

#-- frontend
{{- $apiName := (get $secretData "apiName" | b64dec | default "") }}
{{- $baseUrl := (get $secretData "baseUrl" | b64dec | default "") }}
{{- $reactAppApiUrl := .Values.global.secrets.reactAppApiUrl| default "/api" }}

---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-backend
  labels: {{- include "labels" . | nindent 4 }}
  {{- if .Values.global.secrets.persist }}
  annotations:
    helm.sh/resource-policy: keep
  {{- end }}
data:
  BASE_URL_BC_API:  {{ $baseUrlBcApi | b64enc | quote }}
  OBSERVATIONS_EXPORT_URL:  {{ $observationsExportUrl | b64enc | quote }}
  OBSERVATIONS_URL:  {{ $observationsUrl | b64enc | quote }}
  LOCATION_TYPE_CODE_TABLE_API:  {{ $locationTypeCodeTableApi | b64enc | quote }}
  LOCATION_NAME_CODE_TABLE_API:  {{ $locationNameCodeTableApi | b64enc | quote }}
  PERMIT_NUMBER_CODE_TABLE_API:  {{ $permitNumberCodeTableApi | b64enc | quote }}
  MEDIA_CODE_TABLE_API:  {{ $mediaCodeTableApi | b64enc | quote }}
  OBSERVED_PROPERTIES_CODE_TABLE_API:  {{ $observedPropertiesCodeTableApi | b64enc | quote }}
  PROJECTS_CODE_TABLE_API:  {{ $projectsCodeTableApi | b64enc | quote }}
  API_KEY:  {{ $apiKey | b64enc | quote }}
  AUTH_TOKEN:  {{ $authToken | b64enc | quote }}
  ANALYTICAL_METHOD_CODE_TABLE_API: {{ (get $secretData "analyticalMethodCodeTableApi" | b64dec | default "") | b64enc | quote }}
  ANALYZING_AGENCY_CODE_TABLE_API: {{ (get $secretData "analyzingAgencyCodeTableApi" | b64dec | default "") | b64enc | quote }}
  WORKED_ORDER_NO_CODE_TABLE_API: {{ (get $secretData "workedOrderNoCodeTableApi" | b64dec | default "") | b64enc | quote }}
  SAMPLING_AGENCY_CODE_TABLE_API: {{ (get $secretData "samplingAgencyCodeTableApi" | b64dec | default "") | b64enc | quote }}
  COLLECTION_METHOD_CODE_TABLE_API: {{ (get $secretData "collectionMethodCodeTableApi" | b64dec | default "") | b64enc | quote }}
  QC_SAMPLE_TYPE_CODE_TABLE_API: {{ (get $secretData "qcSampleTypeCodeTableApi" | b64dec | default "") | b64enc | quote }}
  DATA_CLASSIFICATION_CODE_TABLE_API: {{ (get $secretData "dataClassificationCodeTableApi" | b64dec | default "") | b64enc | quote }}
  SAMPLE_DEPTH_CODE_TABLE_API: {{ (get $secretData "sampleDepthCodeTableApi" | b64dec | default "") | b64enc | quote }}
  UNITS_CODE_TABLE_API: {{ (get $secretData "unitsCodeTableApi" | b64dec | default "") | b64enc | quote }}
  SPECIMEN_ID_CODE_TABLE_API: {{ (get $secretData "specimenIdCodeTableApi" | b64dec | default "") | b64enc | quote }}



---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-frontend
  labels: {{- include "labels" . | nindent 4 }}
  {{- if .Values.global.secrets.persist }}
  annotations:
    helm.sh/resource-policy: keep
  {{- end }}
data:
  # FRONTEND Secrets
  PORT:  "3000"

{{- end }}










